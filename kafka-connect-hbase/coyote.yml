- name: coyote
  title: kafka-connect-hbase

- name: Setup Containers
  entries:
    - name: Docker Compose Build
      command: docker-compose build
      ignore_exit_code: true
    - name: Docker Compose Up
      command: docker-compose up -d
    - name: Wait for Connect to get up
      command: >
        bash -c '
          for ((i=0;i<30;i++)); do
            sleep 10;
            docker exec kafkaconnecthbase_fast-data-dev_1 curl "http://localhost:8083/connectors" && break;
          done'
      nolog: true
    - name: Check docker compose log
      command: docker-compose logs
      stdout_has: [ 'INFO success: broker entered RUNNING state' ]
      stdout_not_has: [ 'INFO exited: broker' ]
    - name: Start hbase
      command: docker exec -d kafkaconnecthbase_fast-data-dev_1 start-hbase.sh
    - name: Sleep a bit more
      command: sleep 30
      nolog: true

- name: Setup HBase Connector
  entries:
    - name: Create HBase table
      command: >
        docker exec -i kafkaconnecthbase_fast-data-dev_1 hbase shell
      stdin: |
        create 'person',{NAME=>'d', VERSIONS=>1}
        list
        describe 'person'
    - name: Create Kafka Topic
      command: >
        docker run --rm --network=kafkaconnecthbase_default landoop/fast-data-dev
          kafka-topics --zookeeper fast-data-dev:2181 --topic hbase-sink --partitions 1 --replication-factor 1 --create
    - name: Create a Hbase Distributed Connector
      command: >
        docker run --rm --network=kafkaconnecthbase_default -i landoop/fast-data-dev
          curl -vs --stderr - -X POST -H "Content-Type: application/json"
               --data @-
               "http://fast-data-dev:8083/connectors"
      stdout_not_has: [ 'HTTP/1.1 [45][0-9][0-9] ' ]
      stdin: |
        {
          "name": "hbase-sink",
          "config": {
            "connector.class": "com.datamountaineer.streamreactor.connect.hbase.HbaseSinkConnector",
            "tasks.max": "1",
            "topics": "hbase-sink",
            "connect.hbase.sink.column.family": "d",
            "connect.hbase.column.family": "d",
            "connect.hbase.sink.kcql": "INSERT INTO person SELECT * FROM hbase-sink",
            "connect.hbase.kcql": "INSERT INTO person SELECT * FROM hbase-sink",
            "connect.deprecated.fields.to.remove": "connect.hbase.sink.kcql, connect.hbase.sink.column.family"
          }
        }
    - command: sleep 30
      nolog: true

- name: Test Connector
  entries:
    - name: Write Entries into Topic
      command: >
        docker run --rm -i --network=kafkaconnecthbase_default landoop/fast-data-dev
          kafka-avro-console-producer --broker-list fast-data-dev:9092
            --topic hbase-sink --property schema.registry.url="http://fast-data-dev:8081"
            --property
            value.schema='{"type":"record","name":"User","namespace":"com.datamountaineer.streamreactor.connect.hbase","fields":[{"name":"firstName","type":"string"},{"name":"lastName","type":"string"},{"name":"age","type":"int"},{"name":"salary","type":"double"}]}'
      stdin: |
        {"firstName": "John", "lastName": "Smith", "age":30, "salary": 4830}
        {"firstName": "Anna", "lastName": "Jones", "age":28, "salary": 5430}
      timeout: 20s
    - command: sleep 60
      nolog: true
    - name: Verify entry 1
      command: >
        docker exec -i kafkaconnecthbase_fast-data-dev_1 hbase shell
      stdout_has: [ 'John', 'Anna' ]
      stdin: scan 'person'
    - name: Read First 4000 Lines of Connect Logs
      command: >
        docker exec kafkaconnecthbase_fast-data-dev_1 head -n4000 /var/log/connect-distributed.log
      stdout_not_has: [ '\] ERROR' ]

- name: Clean-up Containers
  entries:
    - name: Docker Compose Down
      command: docker-compose down
