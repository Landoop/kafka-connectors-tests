- name: coyote
  title: kafka-connect-blockchain

- name: Setup Containers
  entries:
    - name: Docker Compose Pull
      command: docker-compose -p kafkaconnectblockchain pull
      ignore_exit_code: true
    - name: Docker Compose Up
      command: docker-compose -p kafkaconnectblockchain up -d
    - name: Wait for Connect to get up
      command: >
        bash -c '
          for ((i=0;i<30;i++)); do
            sleep 10;
            docker exec kafkaconnectblockchain_fast-data-dev_1 curl "http://localhost:8083/connectors" && break;
          done'
      nolog: true
    - name: Check docker compose log
      command: docker-compose -p kafkaconnectblockchain logs
      stdout_has: [ 'INFO success: broker entered RUNNING state' ]
      stdout_not_has: [ 'INFO exited: broker' ]
    - name: fast-data-dev build.info
      command: docker exec kafkaconnectblockchain_fast-data-dev_1 cat /build.info

- name: Setup Blockchain Connector
  entries:
    - name: Create Topic
      command: >
        docker run --rm --network=kafkaconnectblockchain_default landoop/fast-data-dev
          kafka-topics --zookeeper fast-data-dev:2181 --topic blockchain --partitions 1 --replication-factor 1 --create
    - name: Create a Blockchain Distributed Connector
      command: >
        docker run --rm --network=kafkaconnectblockchain_default -i landoop/fast-data-dev
          curl -vs --stderr - -X POST -H "Content-Type: application/json"
               --data @-
               "http://fast-data-dev:8083/connectors"
      stdout_not_has: [ 'HTTP/1.1 [45][0-9][0-9] ' ]
      stdin: |
        {
          "name": "blockchain-%UNIQUE_RC%",
          "config": {
            "connector.class": "com.datamountaineer.streamreactor.connect.blockchain.source.BlockchainSourceConnector",
            "tasks.max": "1",
            "connect.blockchain.source.kafka.topic": "blockchain"
          }
        }

- name: Test Connector
  entries:
    - name: Read Entries from Topic
      command: >
        timeout 45
        docker run --rm --network=kafkaconnectblockchain_default landoop/fast-data-dev
          kafka-avro-console-consumer --bootstrap-server fast-data-dev:9092
                                      --topic blockchain --from-beginning
                                      --property schema.registry.url=http://fast-data-dev:8081
      ignore_exit_code: true
      stdout_has: [ 'lock_time', 'sequence', '"tx_index":[0-9]{5,5}' ]
    - name: Read First 4000 Lines of Connect Logs
      command: >
        docker exec kafkaconnectblockchain_fast-data-dev_1 head -n4000 /var/log/connect-distributed.log
      stdout_not_has: [ '\] ERROR' ]
- name: Clean-up Containers
  entries:
    - name: Docker Compose Down
      command: docker-compose -p kafkaconnectblockchain down
