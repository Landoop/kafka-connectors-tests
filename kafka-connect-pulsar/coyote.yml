- name: coyote
  title: kafka-connect-pulsar

- name: Setup Containers
  entries:
    - name: Docker Compose Pull
      command: docker-compose pull
      ignore_exit_code: true
    - name: Docker Compose Build
      command: docker-compose build
    - name: Docker Compose Up
      command: docker-compose up -d
    - name: Wait for Connect to get up
      command: >
        bash -c '
          for ((i=0;i<30;i++)); do
            sleep 10;
            docker exec kafkaconnectpulsar_fast-data-dev_1 curl "http://localhost:8083/connectors" && break;
          done'
      nolog: true
    - name: Check docker compose log
      command: docker-compose logs
      stdout_has: [ 'INFO success: broker entered RUNNING state' ]
      stdout_not_has: [ 'INFO exited: broker', 'pulsar.*ERROR:' ]

- name: Setup Pulsar Sink Connector
  entries:
    - name: Create Topic
      command: >
        docker run --rm --network=kafkaconnectpulsar_default landoop/fast-data-dev
          kafka-topics --zookeeper fast-data-dev:2181 --topic pulsar-sink --partitions 1 --replication-factor 1 --create
    - name: Create a PulsarSearch Distributed Connector
      command: >
        docker run --rm --network=kafkaconnectpulsar_default -i landoop/fast-data-dev
          curl -vs --stderr - -X POST -H "Content-Type: application/json"
               --data @-
               "http://fast-data-dev:8083/connectors"
      stdout_not_has: [ 'HTTP/1.1 [45][0-9][0-9] ' ]
      stdin: |
        {
          "name": "pulsar-sink",
          "config": {
            "connector.class": "com.datamountaineer.streamreactor.connect.pulsar.sink.PulsarSinkConnector",
            "tasks.max": "1",
            "topics": "pulsar-sink",
            "connect.pulsar.hosts": "pulsar://pulsar:6650",
            "connect.pulsar.kcql": "INSERT INTO persistent://sample/standalone/landoop/test SELECT * FROM pulsar-sink",
            "connect.progress.enabled": "true"
          }
        }
    - command: sleep 30
      nolog: true

- name: Test Connector
  entries:
    - name: Write Entries into Topic
      command: >
        docker run --rm -i --network=kafkaconnectpulsar_default landoop/fast-data-dev
          kafka-avro-console-producer --broker-list fast-data-dev:9092
            --topic pulsar-sink --property schema.registry.url="http://fast-data-dev:8081"
            --property
            value.schema='{"type":"record","name":"myrecord","fields":[{"name":"id","type":"int"},{"name":"random_field","type":"string"}]}'
      stdin: |
        {"id": 999, "random_field": "foo"}
        {"id": 888, "random_field": "bar"}
      timeout: 20s
    - command: sleep 60
      nolog: true
    - name: Verify Entries Written
      command: >
        docker exec kafkaconnectpulsar_fast-data-dev_1
          curl http://pulsar:8080/admin/persistent/sample/standalone/landoop/test/internalStats
      stdout_has: [ '"numberOfEntries":2,' ]
    - name: Read First 5000 Lines of Connect Logs
      command: >
        docker exec kafkaconnectpulsar_fast-data-dev_1 head -n5000 /var/log/connect-distributed.log
      stdout_has: [ '\] INFO Delivered 2 records for pulsar-sink' ]
      stdout_not_has: [ '\] ERROR' ]

- name: Clean-up Containers
  entries:
    - name: Docker Compose Down
      command: docker-compose down
