- name: coyote
  title: kafka-connect-mqtt

- name: Setup Containers
  entries:
    - name: Docker Compose Pull
      command: docker-compose pull
      ignore_exit_code: true
    - name: Docker Compose Build
      command: docker-compose build
    - name: Docker Compose Up
      command: docker-compose up -d
    - name: Sleep a bit
      command: sleep 221
      nolog: true
    - name: Check docker compose log
      command: docker-compose logs
      stdout_has: [ 'INFO success: broker entered RUNNING state' ]
      stdout_not_has: [ 'INFO exited: broker' ]

- name: Setup MQTT (ActiveMQ) Connector
  entries:
    - name: Create Kafka Topic
      command: >
        docker run --rm --network=kafkaconnectmqtt_default landoop/fast-data-dev
          kafka-topics --zookeeper fast-data-dev:2181 --topic mqtt-source --partitions 1 --replication-factor 1 --create
    - name: Setup a Listener for ActiveMQ Topic
      command: >
        docker exec -d kafkaconnectmqtt_fast-data-dev_1
          nohup activemq-test -server activemq:1883 -origin /topic/connect_topic -log /var/log/activemq-test.log
    - name: Create a MQTT Distributed Connector
      command: >
        docker exec -i kafkaconnectmqtt_fast-data-dev_1
          curl -vs --stderr - -X POST -H "Content-Type: application/json"
               --data @-
               "http://fast-data-dev:8083/connectors"
      stdout_not_has: [ 'HTTP/1.1 [45][0-9][0-9] ' ]
      stdin: |
        {
          "name": "mqtt-source",
          "config": {
            "connector.class": "com.datamountaineer.streamreactor.connect.mqtt.source.MqttSourceConnector",
            "tasks.max": "1",
            "connect.mqtt.connection.clean": "true",
            "connect.mqtt.connection.timeout": "1000",
            "connect.mqtt.source.kcql": "INSERT INTO mqtt-source SELECT * FROM /topic/connect_topic",
            "connect.mqtt.kcql": "INSERT INTO mqtt-source SELECT * FROM /topic/connect_topic WITHCONVERTER=com.datamountaineer.streamreactor.connect.converters.source.AvroConverter",
            "connect.mqtt.connection.keep.alive": "1000",
            "connect.mqtt.source.converters": "/topic/connect_topic=com.datamountaineer.streamreactor.connect.converters.source.AvroConverter",
            "connect.source.converter.avro.schemas": "/topic/connect_topic=/schema.avro",
            "connect.converter.avro.schemas": "/topic/connect_topic=/schema.avro",
            "connect.mqtt.client.id": "dm_source_id,",
            "connect.mqtt.converter.throw.on.error": "true",
            "connect.mqtt.hosts": "tcp://activemq:1883",
            "connect.mqtt.connections.host": "tcp://activemq:1883",
            "connect.mqtt.service.quality": "1",
            "connect.deprecated.fields.to.remove": "connect.mqtt.hosts, connect.mqtt.source.url, connect.mqtt.source.converters, connect.source.converter.avro.schemas"
          }
        }
    - command: sleep 30
      nolog: true

- name: Test Connector
  entries:
    - name: Read Entries from Topic
      command: >
        timeout 40
        docker exec kafkaconnectmqtt_fast-data-dev_1
          kafka-avro-console-consumer --bootstrap-server fast-data-dev:9092
                                      --topic mqtt-source --from-beginning --new-consumer
                                      --property schema.registry.url=http://fast-data-dev:8081
      ignore_exit_code: true
      stdout_has: [ '{"output":5,"deviceid":"plant1-room3-pod4"}', '{"output":16,"deviceid":"ship5-deck2-rack3"}' ]
    - command: sleep 30
      nolog: true
    - name: Read activemq-test logs to verify messages were passed
      command: >
        docker exec kafkaconnectmqtt_fast-data-dev_1 cat /var/log/activemq-test.log
      stdout_has: [ 'plant1-room3-pod4', 'ship5-deck2-rack3' ]
    - name: Read First 7000 Lines of Connect Logs
      command: >
        docker exec kafkaconnectmqtt_fast-data-dev_1 head -n7000 /var/log/connect-distributed.log
      stdout_not_has: [ '\] ERROR' ]

- name: Clean-up Containers
  entries:
    - name: Docker Compose Down
      command: docker-compose down
