- name: coyote
  title: kafka-connect-hazelcast

- name: Setup Containers
  entries:
    - name: Docker Compose Pull
      command: docker-compose pull
      ignore_exit_code: true
    - name: Docker Compose Up
      command: docker-compose up -d
    - name: Sleep a bit
      command: sleep 30
      nolog: true
    - name: Check docker compose log
      command: docker-compose logs
      stdout_has: [ 'INFO success: broker entered RUNNING state' ]
      stdout_not_has: [ 'INFO exited: broker' ]

- name: Setup Hazelcast Connector
  entries:
    - name: Create Topic
      command: >
        docker run --rm --network=kafkaconnecthazelcast_default landoop/fast-data-dev
          kafka-topics --zookeeper fast-data-dev:2181 --topic hazelcast-sink --partition 1 --replication 1 --create
    - name: Create a Hazelcast Distributed Connector
      command: >
        docker run --rm --network=kafkaconnecthazelcast_default -i landoop/fast-data-dev
          curl -vs --stderr - -X POST -H "Content-Type: application/json"
               --data @-
               "http://fast-data-dev:8083/connectors"
      stdout_not_has: [ 'HTTP/1.1 [45][0-9][0-9] ' ]
      stdin: |
        {
          "name": "hazelcast-sink",
          "config": {
            "connector.class": "com.datamountaineer.streamreactor.connect.hazelcast.sink.HazelCastSinkConnector",
            "tasks.max": "1",
            "topics": "hazelcast-sink",
            "connect.hazelcast.sink.cluster.members": "hazelcast",
            "connect.hazelcast.export.route.query": "INSERT INTO sink-index SELECT * FROM hazelcast-sink WITHFORMAT JSON BATCH 100",
            "connect.hazelcast.sink.group.name": "dev",
            "connect.hazelcast.sink.group.password": "dev-pass"
          }
        }
    - command: sleep 20
      nolog: true

- name: Test Connector
  entries:
    - name: Write Entries into Topic
      command: >
        docker run --rm -i --network=kafkaconnecthazelcast_default landoop/fast-data-dev
          kafka-avro-console-producer --broker-list fast-data-dev:9092
            --topic hazelcast-sink --property schema.registry.url="http://fast-data-dev:8081"
            --property
            value.schema='{"type":"record","name":"User","namespace":"com.datamountaineer.streamreactor.connect.HazelCast","fields":[{"name":"firstName","type":"string"},{"name":"lastName","type":"string"},{"name":"age","type":"int"},{"name":"salary","type":"double"}]}'
      stdin: |
        {"firstName": "John", "lastName": "Smith", "age":30, "salary": 4830}
      timeout: 20s
    - command: sleep 20
      nolog: true
    - name: Read First 3000 Lines of Connect Logs
      command: >
        docker exec kafkaconnecthazelcast_fast-data-dev_1 head -n3000 /var/log/connect-distributed.log
      stdout_has: [ '\] INFO .*Writt' ]
      stdout_not_has: [ '\] ERROR' ]
